SimpleRNN:
  desc: "简单循环神经网络"
  paddle:
    api_name: "paddle.nn.SimpleRNN"
    params:
      data0:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [4, 23, 16]
        range: [ -1, 1]
      data1:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 32]
        range: [ -1, 1]
      input_size: 16
      hidden_size: 32
      num_layers: 2

SimpleRNNCell:
  desc: "简单循环神经网络cell单元"
  paddle:
    api_name: "paddle.nn.SimpleRNNCell"
    params:
      data0:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [4, 16]
        range: [ -1, 1]
      data1:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [4, 32]
        range: [ -1, 1]
      input_size: 16
      hidden_size: 32
      activation: 'tanh'

MultiHeadAttention:
  desc: "多头注意力机制"
  paddle:
    api_name: "paddle.nn.MultiHeadAttention"
    params:
      data0:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 8]
        range: [ -1, 1]
      data1:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 8]
        range: [ -1, 1]
      data2:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 8]
        range: [ -1, 1]
      data3:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 2, 4, 4]
        range: [ -1, 1]
      embed_dim: 8
      num_heads: 2
      dropout: 0.0

Transformer:
  desc: "Transformer模型"
  paddle:
    api_name: "paddle.nn.Transformer"
    params:
      data0:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 128]
        range: [ -1, 1]
      data1:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 6, 128]
        range: [ -1, 1]
      data2:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 2, 4, 4]
        range: [ -1, 1]
      data3:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 2, 6, 6]
        range: [ -1, 1]
      data4:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 2, 6, 4]
        range: [ -1, 1]
      d_model: 128
      nhead: 2
      num_encoder_layers: 4
      num_decoder_layers: 4
      dim_feedforward: 512
      dropout: 0.1
      activation: 'relu'

#TransformerDecoder:
#  desc: "Transformer解码器, 由多个Transformer解码器层(TransformerDecoderLayer)叠加组成的"
#  paddle:
#    api_name: "paddle.nn.TransformerDecoder"
#    params:
#      data0:
#        random: true
#        type: "Tensor"
#        dtype: "float32"
#        shape: [2, 4, 128]
#        range: [ -1, 1]
#      data1:
#        random: true
#        type: "Tensor"
#        dtype: "float32"
#        shape: [2, 6, 128]
#        range: [ -1, 1]
#      data2:
#        random: true
#        type: "Tensor"
#        dtype: "float32"
#        shape: [2, 2, 4, 4]
#        range: [ -1, 1]
#      data3:
#        random: true
#        type: "Tensor"
#        dtype: "float32"
#        shape: [2, 2, 4, 6]
#        range: [ -1, 1]
#      data4:
#        random: true
#        type: "Tensor"
#        dtype: "float32"
#        shape: [2, 2, 6, 4]
#        range: [ -1, 1]
#      decoder_layer: 128
#      num_layers: 2
#      norm: 512
#      dropout: 0.1
#      activation: 'relu'

TransformerDecoderLayer:
  desc: "Transformer解码器层"
  paddle:
    api_name: "paddle.nn.TransformerDecoderLayer"
    params:
      data0:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 128]
        range: [ -1, 1]
      data1:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 6, 128]
        range: [ -1, 1]
      data2:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 2, 4, 4]
        range: [ -1, 1]
      data3:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 2, 4, 6]
        range: [ -1, 1]
      data4:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 2, 6, 4]
        range: [ -1, 1]
      d_model: 128
      nhead: 2
      dim_feedforward: 512
      dropout: 0.1
      activation: 'relu'

TransformerEncoderLayer:
  desc: "Transformer编码器层"
  paddle:
    api_name: "paddle.nn.TransformerEncoderLayer"
    params:
      data0:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 128]
        range: [ -1, 1]
      data1:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 2, 4, 4]
        range: [ -1, 1]
      d_model: 128
      nhead: 2
      dim_feedforward: 512
      dropout: 0.1
      activation: 'relu'

Bilinear:
  desc: "该层对两个输入执行双线性张量积"
  paddle:
    api_name: "paddle.nn.Bilinear"
    params:
      data0:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [5, 5]
        range: [ -1, 1]
      data1:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [5, 4]
        range: [ -1, 1]
      in1_features: 5
      in2_features: 4
      out_features: 8

Linear:
  desc: "线性变换层"
  paddle:
    api_name: "paddle.nn.Linear"
    params:
      data:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [3, 2]
        range: [ -1, 1]
      in_features: 2
      out_features: 4

AlphaDropout:
  desc: "AlphaDropout是一种具有自归一化性质的dropout。均值为0，方差为1的输入，经过AlphaDropout计算之后，输出的均值和方差与输入保持一致。"
  paddle:
    api_name: "paddle.nn.AlphaDropout"
    params:
      data:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 2]
        range: [ -1, 1]
      p: 0.5

Dropout:
  desc: "Dropout是一种正则化手段，该算子根据给定的丢弃概率p ，在训练过程中随机将一些神经元输出设置为0，通过阻止神经元节点间的相关性来减少过拟合"
  paddle:
    api_name: "paddle.nn.Dropout"
    params:
      data:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3]
        range: [ -1, 1]
      p: 0.5
      mode: "upscale_in_train"

Dropout2D:
  desc: "2维Dropout"
  paddle:
    api_name: "paddle.nn.Dropout2D"
    params:
      data:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 4, 5]
        range: [ -1, 1]
      p: 0.5
      data_format: 'NCHW'

Dropout3D:
  desc: "3维Dropout"
  paddle:
    api_name: "paddle.nn.Dropout3D"
    params:
      data:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 4, 5, 6]
        range: [ -1, 1]
      p: 0.5
      data_format: 'NCDHW'

Embedding:
  desc: "嵌入层(Embedding Layer)"
  paddle:
    api_name: "paddle.nn.Embedding"
    params:
      data0:
        random: true
        type: "Tensor"
        dtype: "int64"
        shape: [3, 1]
        range: [0, 10]
      num_embeddings: 10
      embedding_dim: 3
      sparse: False

PixelShuffle:
  desc: "该算子将一个形为[N, C, H, W]或是[N, H, W, C]的Tensor重新排列成形为 [N, C/r**2, H*r, W*r]或 [N, H*r, W*r, C/r**2] 的Tensor"
  paddle:
    api_name: "paddle.nn.PixelShuffle"
    params:
      data0:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 9, 4, 4]
        range: [ -1, 1]
      upscale_factor: 3
      data_format: 'NCHW'

Upsample:
  desc: "该OP用于插值调整一个batch中2D-或3D-image的大小"
  paddle:
    api_name: "paddle.nn.Upsample"
    params:
      data0:
        random: true
        type: "Tensor"
        dtype: "int64"
        shape: [2, 3, 5, 4]
        range: [ -1, 1]
      size: [12, 12]
      mode: 'nearest'
      align_corners: False
      align_mode: 0
      data_format: 'NCHW'

UpsamplingBilinear2D:
  desc: "该OP用于双线性插值插值调整一个batch中图片的大小"
  paddle:
    api_name: "paddle.nn.UpsamplingBilinear2D"
    params:
      data0:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 5, 4]
        range: [ -1, 1]
      size: [12, 12]
      data_format: 'NCHW'

UpsamplingNearest2D:
  desc: "该OP用于最近邻插值插值调整一个batch中图片的大小"
  paddle:
    api_name: "paddle.nn.UpsamplingNearest2D"
    params:
      data0:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 5, 4]
        range: [ -1, 1]
      size: [12, 12]
      data_format: 'NCHW'

CosineSimilarity:
  desc: "比较两个tensor的余弦相似度"
  paddle:
    api_name: "paddle.nn.CosineSimilarity"
    params:
      data0:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3]
        range: [ -1, 1]
      data1:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3]
        range: [ -1, 1]
      axis: 0
      eps: 0.00000001

Flatten:
  desc: "展开一个tensor"
  paddle:
    api_name: "paddle.nn.Flatten"
    params:
      data0:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 5, 4]
        range: [ -1, 1]

PairwiseDistance:
  desc: "计算两个tensor之间pairwise的距离"
  paddle:
    api_name: "paddle.nn.PairwiseDistance"
    params:
      data0:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3]
        range: [ -1, 1]
      data1:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3]
        range: [ -1, 1]
      p: 2.
      epsilon: 0.000001
      keepdim: False

Unfold:
  desc: "通被称作为im2col过程. 对于每一个输入形状为[N, C, H, W]的 x ，都将计算出一个形状为[N, Cout, Lout]的输出"
  paddle:
    api_name: "paddle.nn.Unfold"
    params:
        data:
          random: true
          type: "Tensor"
          dtype: "float32"
          shape: [5, 3, 8, 8]
        kernel_sizes: [3, 3]
        strides: 1
        paddings: 0
        dilations: 1

conv1d:
  desc: "1维卷积"
  paddle:
    api_name: "paddle.nn.functional.conv1d"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [3, 1, 5]
        range: [ -1, 1]
      weight:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [3, 1, 2]
        range: [ -1, 1 ]
      stride: 1
      padding: 0
      dilation: 1
      groups: 1
      data_format: 'NCL'

conv1d_transpose:
  desc: "1维反卷积"
  paddle:
    api_name: "paddle.nn.functional.conv1d_transpose"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [3, 3, 8]
        range: [ -1, 1]
      weight:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [3, 1, 2]
        range: [ -1, 1 ]
      stride: 1
      padding: 0
      dilation: 1
      groups: 1
      data_format: 'NCL'

conv2d:
  desc: "2维卷积"
  paddle:
    api_name: "paddle.nn.functional.conv2d"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [ 3, 1, 3, 3 ]
        range: [ -1, 1]
      weight:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [ 3, 1, 2, 2 ]
        range: [ -1, 1 ]
      padding: 0
      groups: 1

conv2d_transpose:
  desc: "2维反卷积"
  paddle:
    api_name: "paddle.nn.functional.conv2d_transpose"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [3, 3, 8, 8]
        range: [ -1, 1]
      weight:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [3, 1, 2, 2]
        range: [ -1, 1 ]
      stride: 1
      padding: 0
      dilation: 1
      groups: 1
      data_format: 'NCHW'

conv3d:
  desc: "3维卷积"
  paddle:
    api_name: "paddle.nn.functional.conv3d"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [ 3, 1, 3, 3, 3 ]
        range: [ -1, 1]
      weight:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [ 3, 1, 2, 2, 2 ]
        range: [ -1, 1 ]
      padding: 0
      groups: 1

conv3d_transpose:
  desc: "2维反卷积"
  paddle:
    api_name: "paddle.nn.functional.conv3d_transpose"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [3, 3, 8, 8, 8]
        range: [ -1, 1]
      weight:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [3, 1, 2, 2, 2]
        range: [ -1, 1 ]
      stride: 1
      padding: 0
      dilation: 1
      groups: 1
      data_format: 'NCDHW'

adaptive_avg_pool1d:
  desc: "1维自适应平均池化"
  paddle:
    api_name: "paddle.nn.functional.adaptive_avg_pool1d"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [4, 3, 16]
        range: [ -1, 1]
      output_size: 8

adaptive_avg_pool2d:
  desc: "2维自适应平均池化"
  paddle:
    api_name: "paddle.nn.functional.adaptive_avg_pool2d"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [4, 3, 16, 16]
        range: [ -1, 1]
      output_size: 8

adaptive_avg_pool3d:
  desc: "3维自适应平均池化"
  paddle:
    api_name: "paddle.nn.functional.adaptive_avg_pool3d"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [4, 3, 16, 16, 16]
        range: [ -1, 1]
      output_size: 8

adaptive_max_pool1d:
  desc: "1维自适应平均池化"
  paddle:
    api_name: "paddle.nn.functional.adaptive_max_pool1d"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [4, 3, 16]
        range: [ -1, 1]
      output_size: 8
      return_mask: False

adaptive_max_pool1d0:
  desc: "1维自适应平均池化"
  paddle:
    api_name: "paddle.nn.functional.adaptive_max_pool1d"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [4, 3, 16]
        range: [ -1, 1]
      output_size: 8
      return_mask: True

adaptive_max_pool2d:
  desc: "2维自适应平均池化"
  paddle:
    api_name: "paddle.nn.functional.adaptive_max_pool2d"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [4, 3, 16, 16]
        range: [ -1, 1]
      output_size: 8
      return_mask: False

adaptive_max_pool2d0:
  desc: "2维自适应平均池化"
  paddle:
    api_name: "paddle.nn.functional.adaptive_max_pool2d"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [4, 3, 16, 16]
        range: [ -1, 1]
      output_size: 8
      return_mask: True

adaptive_max_pool3d:
  desc: "3维自适应平均池化"
  paddle:
    api_name: "paddle.nn.functional.adaptive_max_pool3d"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [4, 3, 16, 16, 16]
        range: [ -1, 1]
      output_size: 8
      return_mask: False

adaptive_max_pool3d0:
  desc: "3维自适应平均池化"
  paddle:
    api_name: "paddle.nn.functional.adaptive_max_pool3d"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [4, 3, 16, 16, 16]
        range: [ -1, 1]
      output_size: 8
      return_mask: True

avg_pool1d:
  desc: "1维平均池化"
  paddle:
    api_name: "paddle.nn.functional.avg_pool1d"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 16]
        range: [ -1, 1]
      kernel_size: 2
      stride: 1
      padding: 0
      exclusive: True
      ceil_mode: False

avg_pool2d:
  desc: "2维平均池化"
  paddle:
    api_name: "paddle.nn.functional.avg_pool2d"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 16, 16]
        range: [ -1, 1]
      kernel_size: 2
      stride: 1
      padding: 0
      exclusive: True
      ceil_mode: False

avg_pool3d:
  desc: "3维平均池化"
  paddle:
    api_name: "paddle.nn.functional.avg_pool3d"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 16, 16, 16]
        range: [ -1, 1]
      kernel_size: 2
      stride: 1
      padding: 0
      exclusive: True
      ceil_mode: False

max_pool1d:
  desc: "1维最大池化"
  paddle:
    api_name: "paddle.nn.functional.max_pool1d"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 16]
        range: [ -1, 1]
      kernel_size: 2
      stride: 1
      padding: 0
      return_mask: False
      ceil_mode: False

max_pool2d:
  desc: "2维最大池化"
  paddle:
    api_name: "paddle.nn.functional.max_pool2d"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 16, 16]
        range: [ -1, 1]
      kernel_size: 2
      stride: 1
      padding: 0
      return_mask: False
      ceil_mode: False
      data_format: 'NCHW'

max_pool3d:
  desc: "3维最大池化"
  paddle:
    api_name: "paddle.nn.functional.max_pool3d"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 16, 16, 16]
        range: [ -1, 1]
      kernel_size: 2
      stride: 1
      padding: 0
      return_mask: False
      ceil_mode: False
      data_format: 'NCDHW'

pad:
  desc: "该OP依照 pad 和 mode 属性对 x 进行 pad"
  paddle:
    api_name: "paddle.nn.functional.pad"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 8, 8]
        range: [ -1, 1]
      pad: [2, 1, 3, 1]
      mode: 'constant'
      value: 0.0
      data_format: 'NCHW'

pad0:
  desc: "该OP依照 pad 和 mode 属性对 x 进行 pad"
  paddle:
    api_name: "paddle.nn.functional.pad"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 8, 8]
        range: [ -1, 1]
      pad:
        random: true
        type: "Tensor"
        dtype: "int32"
        shape: [4]
        range: [1, 3]
      mode: 'constant'
      value: 0.0
      data_format: 'NCHW'

celu:
  desc: "celu激活层"
  paddle:
    api_name: "paddle.nn.functional.celu"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 8, 8]
        range: [ -1, 5]
      alpha: 1.0

elu:
  desc: "elu激活层"
  paddle:
    api_name: "paddle.nn.functional.elu"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 8, 8]
        range: [ -1, 5]
      alpha: 1.0

elu_:
  desc: "elu激活层, 对输入x采用Inplace策略"
  paddle:
    api_name: "paddle.nn.functional.elu_"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 8, 8]
        range: [ -1, 5]
      alpha: 1.0

gelu:
  desc: "gelu激活层"
  paddle:
    api_name: "paddle.nn.functional.gelu"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 8, 8]
        range: [ -2, 5]
      approximate: False

gumbel_softmax:
  desc: "该OP实现了按Gumbel-Softmax分布进行采样的功能，通过hard可选择是否离散化"
  paddle:
    api_name: "paddle.nn.functional.gumbel_softmax"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 8, 8]
        range: [ -2, 5]
      temperature: 1.0
      hard: False
      axis: -1

hardshrink:
  desc: "hardshrink激活函数"
  paddle:
    api_name: "paddle.nn.functional.hardshrink"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 8, 8]
        range: [ -2, 5]
      threshold: 0.75

hardsigmoid:
  desc: "hardsigmoid激活函数"
  paddle:
    api_name: "paddle.nn.functional.hardsigmoid"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 8, 8]
        range: [ -2, 5]
      slope: 0.1666667
      offset: 0.5

hardswish:
  desc: "hardswish激活函数"
  paddle:
    api_name: "paddle.nn.functional.hardswish"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 8, 8]
        range: [ -2, 5]

hardtanh:
  desc: "hardtanh激活函数"
  paddle:
    api_name: "paddle.nn.functional.hardtanh"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 8, 8]
        range: [ -2, 5]
      min: -1.0
      max: 1.0

leaky_relu:
  desc: "leaky_relu激活函数"
  paddle:
    api_name: "paddle.nn.functional.leaky_relu"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 8, 8]
        range: [ -2, 5]
      negative_slope: 0.01

log_sigmoid:
  desc: "log_sigmoid激活函数"
  paddle:
    api_name: "paddle.nn.functional.log_sigmoid"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 8, 8]
        range: [ -2, 5]

log_softmax:
  desc: "log_softmax激活函数"
  paddle:
    api_name: "paddle.nn.functional.log_softmax"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 8, 8]
        range: [ -2, 5]
      axis: -1

maxout:
  desc: "maxout激活函数"
  paddle:
    api_name: "paddle.nn.functional.maxout"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 8, 8]
        range: [ -2, 5]
      groups: 2
      axis: 1

prelu:
  desc: "prelu激活函数"
  paddle:
    api_name: "paddle.nn.functional.prelu"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 8, 8]
        range: [ -2, 5]
      weight:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [1]
        range: [ 0, 1]
      data_format: 'NCHW'

relu:
  desc: "relu激活函数"
  paddle:
    api_name: "paddle.nn.functional.relu"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 8, 8]
        range: [ -2, 5]

relu_:
  desc: "relu_激活函数, 对输入 x 采用 Inplace 策略"
  paddle:
    api_name: "paddle.nn.functional.relu_"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 8, 8]
        range: [ -2, 5]

relu6:
  desc: "relu6激活函数"
  paddle:
    api_name: "paddle.nn.functional.relu6"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 8, 8]
        range: [ -2, 10]

selu:
  desc: "selu激活函数"
  paddle:
    api_name: "paddle.nn.functional.selu"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 8, 8]
        range: [ -2, 10]
      scale: 1.0507
      alpha: 1.6732

sigmoid:
  desc: "sigmoid激活函数"
  paddle:
    api_name: "paddle.nn.functional.sigmoid"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 8, 8]
        range: [ -2, 5]

silu:
  desc: "silu激活函数"
  paddle:
    api_name: "paddle.nn.functional.silu"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 8, 8]
        range: [ -2, 5]

softmax:
  desc: "softmax激活函数"
  paddle:
    api_name: "paddle.nn.functional.softmax"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 8, 8]
        range: [ -2, 5]
      axis: -1

softmax_:
  desc: "softmax_激活函数, 对输入 x 采用 Inplace 策略"
  paddle:
    api_name: "paddle.nn.functional.softmax_"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 8, 8]
        range: [ -2, 5]
      axis: -1

softplus:
  desc: "softplus激活函数"
  paddle:
    api_name: "paddle.nn.functional.softplus"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 8, 8]
        range: [ -2, 7]
      beta: 1
      threshold: 5

softshrink:
  desc: "softshrink激活函数"
  paddle:
    api_name: "paddle.nn.functional.softshrink"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 8, 8]
        range: [ -2, 3]
      threshold: 0.5

softsign:
  desc: "softsign激活函数"
  paddle:
    api_name: "paddle.nn.functional.softsign"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 8, 8]
        range: [ -2, 3]

swish:
  desc: "swish激活函数"
  paddle:
    api_name: "paddle.nn.functional.swish"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 8, 8]
        range: [ -2, 3]

tanhshrink:
  desc: "tanhshrink激活函数"
  paddle:
    api_name: "paddle.nn.functional.tanhshrink"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 8, 8]
        range: [ -2, 3]

thresholded_relu:
  desc: "thresholded_relu激活函数"
  paddle:
    api_name: "paddle.nn.functional.thresholded_relu"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 8, 8]
        range: [ -2, 3]
      threshold: 1.5

local_response_norm:
  desc: "局部响应正则化"
  paddle:
    api_name: "paddle.nn.functional.local_response_norm"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 8, 8]
        range: [ -2, 3]
      size: 5
      alpha: 0.0001
      beta: 0.75
      k: 1.0
      data_format: 'NCHW'

normalize:
  desc: "使用 Lp 范数沿维度 axis 对 x 进行归一化"
  paddle:
    api_name: "paddle.nn.functional.normalize"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 8, 8]
        range: [ -2, 3]
      p: 2
      axis: 1
      epsilon: 0.000000000001

bilinear:
  desc: "对两个输入执行双线性张量积"
  paddle:
    api_name: "paddle.nn.functional.bilinear"
    params:
      x1:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [5, 5]
        range: [ -1, 1]
      x2:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [5, 4]
        range: [ -1, 1]
      weight:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [10, 5, 4]
        range: [ -1, 1]
      bias:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [1, 10]
        range: [ -1, 1]

linear:
  desc: "线性变换"
  paddle:
    api_name: "paddle.nn.functional.linear"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [3, 2]
        range: [ -1, 1]
      weight:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4]
        range: [ -1, 1]
      bias:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [4]
        range: [ -1, 1]

alpha_dropout:
  desc: "一种具有自归一化性质的dropout"
  paddle:
    api_name: "paddle.nn.functional.alpha_dropout"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 8, 8]
        range: [ -2, 3]
      p: 0.5
      training: False

#alpha_dropout0:
#  desc: "一种具有自归一化性质的dropout"
#  paddle:
#    api_name: "paddle.nn.functional.alpha_dropout"
#    params:
#      x:
#        random: true
#        type: "Tensor"
#        dtype: "float32"
#        shape: [2, 4, 8, 8]
#        range: [ -2, 3]
#      p: 0.5
#      training: True

#dropout:
#  desc: "一种正则化手段"
#  paddle:
#    api_name: "paddle.nn.functional.dropout"
#    params:
#      x:
#        random: true
#        type: "Tensor"
#        dtype: "float32"
#        shape: [2, 4, 8, 8]
#        range: [ -2, 3]
#      p: 0.5
#      training: False
#      mode: "upscale_in_train"

dropout2d:
  desc: "一种正则化手段"
  paddle:
    api_name: "paddle.nn.functional.dropout2d"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 8, 8]
        range: [ -2, 3]
      p: 0.5
      training: False

dropout3d:
  desc: "一种正则化手段"
  paddle:
    api_name: "paddle.nn.functional.dropout3d"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 8, 8, 8]
        range: [ -2, 3]
      p: 0.5
      training: False

diag_embed:
  desc: "其在指定的 2D 平面（由 dim1 和 dim2 指定）上的对角线由输入 input 填充"
  paddle:
    api_name: "paddle.nn.functional.diag_embed"
    params:
      input:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 8, 8, 8]
        range: [ -2, 3]
      offset: 0
      dim1: -2
      dim2: -1

embedding:
  desc: "嵌入层(Embedding Layer)"
  paddle:
    api_name: "paddle.nn.functional.embedding"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "int64"
        shape: [3, 1]
        range: [ 2, 8]
      weight:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [10, 3]
        range: [ -1, 1]
      padding_idx: -1
      sparse: True

affine_grid:
  desc: "生成仿射变换前后的feature maps的坐标映射关系"
  paddle:
    api_name: "paddle.nn.functional.affine_grid"
    params:
      theta:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [1, 2, 3]
        range: [ -1, 2]
      out_shape: [1, 2, 3, 3]
      align_corners: True

affine_grid0:
  desc: "生成仿射变换前后的feature maps的坐标映射关系"
  paddle:
    api_name: "paddle.nn.functional.affine_grid"
    params:
      theta:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [1, 2, 3]
        range: [ -1, 2]
      out_shape:
        random: False
        type: "Tensor"
        dtype: "int32"
        value: [1, 2, 3, 3]
      align_corners: True

cosine_similarity:
  desc: "计算x1与x2沿axis维度的余弦相似度"
  paddle:
    api_name: "paddle.nn.functional.cosine_similarity"
    params:
      x1:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 8, 8]
        range: [ -1, 1]
      x2:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 8, 8]
        range: [ -1, 1]
      axis: 1
      eps: 0.00000001

grid_sample:
  desc: "基于flow field网格的对输入X进行双线性插值采样"
  paddle:
    api_name: "paddle.nn.functional.grid_sample"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 8, 8]
        range: [ -1, 1]
      grid:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 8, 9, 2]
        range: [ -1, 1]
      mode: 'bilinear'
      padding_mode: 'zeros'
      align_corners: True

label_smooth:
  desc: "标签平滑正则化(LSR)"
  paddle:
    api_name: "paddle.nn.functional.label_smooth"
    params:
      label:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 8, 8]
        range: [ 0, 5]
      epsilon: 0.1

label_smooth0:
  desc: "标签平滑正则化(LSR)"
  paddle:
    api_name: "paddle.nn.functional.label_smooth"
    params:
      label:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 8, 8]
        range: [ 0, 5]
      prior_dist:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [1, 8]
        range: [ 0, 1]
      epsilon: 0.1

one_hot:
  desc: "该OP将输入'x'中的每个id转换为一个one-hot向量，其长度为 num_classes"
  paddle:
    api_name: "paddle.nn.functional.one_hot"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "int32"
        shape: [2, 3, 8, 8]
        range: [ 0, 5]
      num_classes: 6

pixel_shuffle:
  desc: "将一个形为[N, C, H, W]或是[N, H, W, C]的Tensor重新排列成形为 [N, C/r**2, H*r, W*r]或 [N, H*r, W*r, C/r**2] 的Tensor"
  paddle:
    api_name: "paddle.nn.functional.pixel_shuffle"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 9, 4, 4]
        range: [ -1, 1]
      upscale_factor: 3
      data_format: 'NCHW'

gather_tree:
  desc: "在整个束搜索(Beam Search)结束后使用"
  paddle:
    api_name: "paddle.nn.functional.gather_tree"
    params:
      ids:
        random: False
        type: "Tensor"
        dtype: "int32"
        value: [[[2, 2], [6, 1]], [[3, 9], [6, 1]], [[0, 1], [9, 0]]]
      parents:
        random: False
        type: "Tensor"
        dtype: "int32"
        value: [[[0, 0], [1, 1]], [[1, 0], [1, 0]], [[0, 0], [0, 1]]]

unfold:
  desc: "通被称作为im2col过程. 对于每一个输入形状为[N, C, H, W]的 x ，都将计算出一个形状为[N, Cout, Lout]的输出"
  paddle:
    api_name: "paddle.nn.functional.unfold"
    params:
        x:
          random: true
          type: "Tensor"
          dtype: "float32"
          shape: [5, 3, 8, 8]
        kernel_sizes: [3, 3]
        strides: 1
        paddings: 0
        dilations: 1

#gather_tree0:
#  desc: "在整个束搜索(Beam Search)结束后使用"
#  paddle:
#    api_name: "paddle.nn.functional.gather_tree"
#    params:
#      ids:
#        random: true
#        type: "Tensor"
#        dtype: "int32"
#        shape: [2, 3]
#        range: [ 0, 10]
#      parents:
#        random: true
#        type: "Tensor"
#        dtype: "int32"
#        shape: [2, 3]
#        range: [ 0, 10]

glu:
  desc: "glu激活函数"
  paddle:
    api_name: "paddle.nn.functional.glu"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 8, 8]
        range: [ -2, 3]
      axis: -1

interpolate:
  desc: "调整一个batch中图片的大小"
  paddle:
    api_name: "paddle.nn.functional.interpolate"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 4, 9, 8]
        range: [ -1, 1]
      size: [12, 12]
      mode: 'nearest'
      align_corners: False
      align_mode: 0
      data_format: 'NCHW'

sequence_mask:
  desc: "该层根据输入 x 和 maxlen 输出一个掩码"
  paddle:
    api_name: "paddle.nn.functional.sequence_mask"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "int32"
        shape: [2, 4, 9, 8]
        range: [ 0, 10]
      maxlen: 10

temporal_shift:
  desc: "对输入X做时序通道T上的位移操作，为TSM(Temporal Shift Module)中使用的操作"
  paddle:
    api_name: "paddle.nn.functional.temporal_shift"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [6, 4, 9, 8]
        range: [ 0, 10]
      seg_num: 3
      shift_ratio: 0.25

upsample:
  desc: "调整一个batch中图片的大小"
  paddle:
    api_name: "paddle.nn.functional.upsample"
    params:
      x:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 3, 9, 8]
        range: [ -1, 1]
      size: [12, 12]
      mode: 'nearest'
      align_corners: False
      align_mode: 0
      data_format: 'NCHW'

class_center_sample:
  desc: "类别中心采样方法, 从全量的类别中心采样一个子集类别中心参与训练"
  paddle:
    api_name: "paddle.nn.functional.class_center_sample"
    params:
      label:
        random: true
        type: "Tensor"
        dtype: "int32"
        shape: [200]
        range: [ 0, 19]
      num_classes: 20
      num_samples: 6
